name: Build VoiceInk
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'VoiceInk.xcodeproj/**'
      - 'whisper.cpp/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  DEVELOPER_DIR: /Applications/Xcode_16.2.app/Contents/Developer

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'
        
    - name: Cache Homebrew
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Caches/Homebrew
          /usr/local/Homebrew/Library/Taps
        key: brew-${{ runner.os }}-${{ hashFiles('.github/workflows/build.yml') }}
        restore-keys: |
          brew-${{ runner.os }}-

    - name: Install dependencies
      run: |
        brew install cmake ccache libomp openblas --formula
        
    - name: Show tool versions
      run: |
        xcodebuild -version
        swift --version
        cmake --version
        echo "System architecture: $(uname -m)"
        sysctl -n machdep.cpu.brand_string
      
    - name: Show whisper.cpp version
      run: |
        cd whisper.cpp
        git log --oneline -1
        
    - name: Cache whisper.cpp build
      id: cache-whispercpp
      uses: actions/cache@v4
      with:
        path: |
          whisper.cpp/build-apple
          whisper.cpp/build-macos
        key: whispercpp-build-${{ hashFiles('whisper.cpp/.git') }}-${{ hashFiles('whisper.cpp/.gitmodules') }}-${{ steps.get-whispercpp-sha.outputs.whispercpp_sha }}
        restore-keys: |
          whispercpp-build-

    - name: Get whisper.cpp submodule commit
      id: get-whispercpp-sha
      run: echo "whispercpp_sha=$(git submodule status whisper.cpp | awk '{print $1}')" >> $GITHUB_OUTPUT

    - name: Build whisper.cpp for macOS arm64
      run: |
        bash build-macos-arm64.sh
        # Ensure the XCFramework is in the expected location
        rm -rf whisper.cpp/build-apple/whisper.xcframework
        cp -R whisper.cpp/build-apple/whisper-macos-arm64.xcframework whisper.cpp/build-apple/whisper.xcframework

    - name: List Xcode schemes
      run: xcodebuild -project VoiceInk.xcodeproj -list

    - name: Cache Xcode DerivedData
      uses: actions/cache@v4
      with:
        path: build
        key: deriveddata-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          deriveddata-${{ runner.os }}-

    - name: Build VoiceInk
      run: |
        xcodebuild -project VoiceInk.xcodeproj \
          -scheme VoiceInk \
          -configuration Release \
          -derivedDataPath build \
          -destination 'platform=macOS,arch=arm64' \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          build

    - name: Create DMG from .app
      if: github.event_name == 'release'
      run: |
        brew install create-dmg
        create-dmg \
          --volname "VoiceInk" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 600 185 \
          build/Build/Products/Release/VoiceInk.app \
          build/Build/Products/Release/VoiceInk.dmg

    - name: Upload Release DMG
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'release'
      with:
        files: build/Build/Products/Release/VoiceInk*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
