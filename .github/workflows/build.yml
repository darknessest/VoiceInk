name: Build VoiceInk

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'VoiceInk.xcodeproj/**'
      - 'whisper.cpp/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-whispercpp:
    runs-on: macos-latest
    outputs:
      whispercpp_sha: ${{ steps.get-whispercpp-sha.outputs.whispercpp_sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get whisper.cpp submodule commit
        id: get-whispercpp-sha
        run: echo "whispercpp_sha=$(git submodule status whisper.cpp | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Cache whisper.cpp build
        id: cache-whispercpp
        uses: actions/cache@v4
        with:
          path: whisper.cpp/build-apple
          key: whispercpp-build-${{ steps.get-whispercpp-sha.outputs.whispercpp_sha }}

      - name: Cache Homebrew
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew/Library/Taps
          key: brew-${{ runner.os }}-${{ hashFiles('.github/workflows/build.yml') }}
          restore-keys: |
            brew-${{ runner.os }}-

      - name: Install dependencies
        run: brew install cmake ccache libomp openblas create-dmg --formula
        if: steps.cache-whispercpp.outputs.cache-hit != 'true'

      - name: Build whisper.cpp for macOS arm64
        if: steps.cache-whispercpp.outputs.cache-hit != 'true'
        run: bash build-macos-arm64.sh

      - name: Package whisper.cpp build directory
        run: tar -C whisper.cpp -czf build-apple.tar.gz build-apple

      - name: Upload packaged whisper.cpp build
        uses: actions/upload-artifact@v4
        with:
          name: whisper-build-${{ steps.get-whispercpp-sha.outputs.whispercpp_sha }}
          path: build-apple.tar.gz

  build-app:
    runs-on: macos-latest
    needs: build-whispercpp
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download whisper.cpp build artifact
        uses: actions/download-artifact@v4
        with:
          name: whisper-build-${{ needs.build-whispercpp.outputs.whispercpp_sha }}
          path: .

      - name: Extract whisper.cpp build
        run: |
          mkdir -p whisper.cpp
          tar -xzf build-apple.tar.gz -C whisper.cpp

      - name: List contents of whisper.cpp/build-apple
        run: |
          echo "Listing contents of whisper.cpp/build-apple:"
          ls -lR whisper.cpp/build-apple

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install dependencies
        run: |
          brew install create-dmg
        
      - name: Show tool versions
        run: |
          xcodebuild -version
          swift --version
          cmake --version
          echo "System architecture: $(uname -m)"
          sysctl -n machdep.cpu.brand_string
      
      - name: Show whisper.cpp version
        run: |
          cd whisper.cpp
          git log --oneline -1
        
      - name: List Xcode schemes
        run: xcodebuild -project VoiceInk.xcodeproj -list

      - name: Cache Xcode DerivedData
        uses: actions/cache@v4
        with:
          path: build
          key: deriveddata-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            deriveddata-${{ runner.os }}-

      - name: Build VoiceInk
        run: |
          xcodebuild -project VoiceInk.xcodeproj \
            -scheme VoiceInk \
            -configuration Release \
            -derivedDataPath build \
            -destination 'platform=macOS,arch=arm64' \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            build

      - name: Create DMG from .app
        if: github.event_name == 'release'
        run: |
          create-dmg \
            --volname "VoiceInk" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --app-drop-link 600 185 \
            build/Build/Products/Release/VoiceInk.dmg \
            build/Build/Products/Release/VoiceInk.app

      - name: Upload Release DMG
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          files: build/Build/Products/Release/VoiceInk*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
