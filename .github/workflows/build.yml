name: Build VoiceInk
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'VoiceInk.xcodeproj/**'
      - 'whisper.cpp/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install dependencies
      run: |
        brew install cmake
        
    - name: Show tool versions
      run: |
        xcodebuild -version
        cmake --version
        echo "System architecture: $(uname -m)"
        sysctl -n machdep.cpu.brand_string
      
    - name: Show whisper.cpp version
      run: |
        cd whisper.cpp
        git log --oneline -1
        
    - name: Build whisper.cpp XCFramework
      run: |
        cd whisper.cpp
        chmod +x build-xcframework.sh
        ./build-xcframework.sh
        ls -la build-apple/
        
    - name: Verify XCFramework
      run: |
        if [ ! -d "whisper.cpp/build-apple/whisper.xcframework" ]; then
          echo "‚ùå Error: whisper.xcframework was not built successfully"
          exit 1
        fi
        echo "‚úÖ whisper.xcframework found"
        ls -la whisper.cpp/build-apple/whisper.xcframework/
        
        # Verify macOS framework contains Apple Silicon
        echo "üîç Verifying macOS framework architecture..."
        MACOS_FRAMEWORK="whisper.cpp/build-apple/whisper.xcframework/macos-arm64_x86_64/whisper.framework/Versions/A/whisper"
        if [ -f "$MACOS_FRAMEWORK" ]; then
          echo "Found macOS framework binary"
          file "$MACOS_FRAMEWORK"
          lipo -archs "$MACOS_FRAMEWORK"
          
          if lipo -archs "$MACOS_FRAMEWORK" | grep -q "arm64"; then
            echo "‚úÖ macOS framework contains Apple Silicon (arm64) architecture"
          else
            echo "‚ùå macOS framework missing Apple Silicon (arm64) architecture"
            exit 1
          fi
        else
          echo "‚ùå macOS framework binary not found at expected location"
          find whisper.cpp/build-apple/whisper.xcframework -name "whisper" -type f
          exit 1
        fi
        
    - name: List Xcode schemes
      run: xcodebuild -project VoiceInk.xcodeproj -list
        
    - name: Build VoiceInk
      run: |
        xcodebuild -project VoiceInk.xcodeproj \
          -scheme VoiceInk \
          -configuration Debug \
          -derivedDataPath build \
          -destination 'platform=macOS,arch=arm64' \
          ARCHS='arm64' \
          VALID_ARCHS='arm64' \
          ONLY_ACTIVE_ARCH=NO \
          build
          
    - name: Verify build artifacts
      run: |
        ls -la build/Build/Products/Debug/
        if [ -d "build/Build/Products/Debug/VoiceInk.app" ]; then
          echo "‚úÖ VoiceInk.app built successfully"
          du -sh build/Build/Products/Debug/VoiceInk.app
          
          # Verify the binary is built for Apple Silicon
          echo "üîç Verifying architecture..."
          file build/Build/Products/Debug/VoiceInk.app/Contents/MacOS/VoiceInk
          lipo -archs build/Build/Products/Debug/VoiceInk.app/Contents/MacOS/VoiceInk
          
          # Check if the binary contains arm64 architecture
          if lipo -archs build/Build/Products/Debug/VoiceInk.app/Contents/MacOS/VoiceInk | grep -q "arm64"; then
            echo "‚úÖ Binary contains Apple Silicon (arm64) architecture"
          else
            echo "‚ùå Binary does not contain Apple Silicon (arm64) architecture"
            exit 1
          fi
        else
          echo "‚ùå VoiceInk.app not found"
          exit 1
        fi
          
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: VoiceInk-build-${{ github.sha }}
        path: |
          build/Build/Products/Debug/VoiceInk.app
          whisper.cpp/build-apple/whisper.xcframework
        retention-days: 30
        
    - name: Test with build script
      run: |
        echo "Testing build script..."
        chmod +x build.sh
        # Don't actually run it since we already built, just check syntax
        bash -n build.sh
        echo "‚úÖ Build script syntax is valid" 